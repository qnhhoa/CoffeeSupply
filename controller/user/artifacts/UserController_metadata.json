{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userDatabaseContractAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "userCatergory",
						"type": "uint256"
					}
				],
				"name": "addUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllUser",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "userId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "userCatergory",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "userIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct User[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "login",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "userId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "userCatergory",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "userIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct User",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userDatabase",
				"outputs": [
					{
						"internalType": "contract UserDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"controller/user/UserController.sol": "UserController"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"abstract/Ownable.sol": {
			"keccak256": "0x8e815c5f3f649aa4088098a200dbffbd403dbf38debbf06ee4a4d984d5a38df5",
			"license": "MIT",
			"urls": [
				"bzz-raw://3488759a9fc298c4257a614f21d95ffc74d2f09928c57b5e50c0291a08a3bbd6",
				"dweb:/ipfs/QmQijbEMGKt7R3L4fARqZTSD41Ah7dn5Lf6G3q9JWwEmgx"
			]
		},
		"controller/user/UserController.sol": {
			"keccak256": "0x36c65d2be21e9e0b3ba9209b4d99835c7892ffb350aa53e800bebf76475535b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://996d1c51468b4d4f0acc5e5d9624d2558c99f142f60177cd5f4305b9010a47c2",
				"dweb:/ipfs/QmZ6bXJNRsNsxjv93waAAUu4zyfRd1RvJQQKUST1s1qH4t"
			]
		},
		"cursor/user/UserDatabaseCursor.sol": {
			"keccak256": "0xeefd9c2f0a14dfa01f574532327dedf15c6044fab38c330c63df538058a4553d",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea5711957977ec97918b5a23b2fd1e96555611652cf5af7e622e5d30f16fc023",
				"dweb:/ipfs/Qmcx1zSK4aRkhZd3sNjdT78tPAJfMqDdUK4adwaGiXgTBR"
			]
		},
		"database/user/UserDatabase.sol": {
			"keccak256": "0x080d016a523635d94e9c38ef3d99c73f95c6beae662f8b7f1819c8cdc03402ab",
			"license": "MIT",
			"urls": [
				"bzz-raw://309c100483df1a0a3573732c981509c788c5185d77f40d37272160f42f3729dc",
				"dweb:/ipfs/QmTwUVpZPcbib9tZyRHSrUKozxWQYsMXu6q9rFZXrjiJiz"
			]
		},
		"struct/user/User.sol": {
			"keccak256": "0x75449a9624c75edc323685a968ff9f2b1a75bee1c760f7d0581b4d063d8131e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://cde04dfe959c5dcb944b3f53413168b1cde51cbe2d0a2ffee2beceb74347d405",
				"dweb:/ipfs/QmUEm2ntJ5CWRrvvxBK5z8S4GNA33Nxos3ZZ51RQsvxcAF"
			]
		}
	},
	"version": 1
}